digraph exhaustiveWhenAndDNNType_kt {
    graph [nodesep=3]
    node [shape=box penwidth=2]
    edge [penwidth=2]

    subgraph cluster_0 {
        color=red
        0 [label="Enter class SomeEnum" style="filled" fillcolor=red];
        1 [label="Exit class SomeEnum" style="filled" fillcolor=red];
    }
    0 -> {1} [color=green];

    subgraph cluster_1 {
        color=red
        2 [label="Enter function <init>" style="filled" fillcolor=red];
        3 [label="Delegated constructor call: super<R|kotlin/Enum<SomeEnum>|>()"];
        4 [label="Exit function <init>" style="filled" fillcolor=red];
    }
    2 -> {3};
    3 -> {4};

    subgraph cluster_2 {
        color=red
        5 [label="Enter class B" style="filled" fillcolor=red];
        6 [label="Exit class B" style="filled" fillcolor=red];
    }
    5 -> {6} [color=green];

    subgraph cluster_3 {
        color=red
        7 [label="Enter function <init>" style="filled" fillcolor=red];
        8 [label="Delegated constructor call: super<R|kotlin/Any|>()"];
        9 [label="Exit function <init>" style="filled" fillcolor=red];
    }
    7 -> {8};
    8 -> {9};

    subgraph cluster_4 {
        color=red
        10 [label="Enter function takeB" style="filled" fillcolor=red];
        subgraph cluster_5 {
            color=blue
            11 [label="Enter block"];
            12 [label="Exit block"];
        }
        13 [label="Exit function takeB" style="filled" fillcolor=red];
    }
    10 -> {11};
    11 -> {12};
    12 -> {13};

    subgraph cluster_6 {
        color=red
        14 [label="Enter function test_1" style="filled" fillcolor=red];
        subgraph cluster_7 {
            color=blue
            15 [label="Enter block"];
            16 [label="Access qualifier /SomeEnum"];
            17 [label="Access variable R|/SomeEnum.A1|"];
            18 [label="Variable declaration: lval flag: R|SomeEnum|"];
            subgraph cluster_8 {
                color=blue
                19 [label="Enter when"];
                20 [label="Access variable R|<local>/flag|"];
                21 [label="Check not null: R|<local>/flag|!!"];
                subgraph cluster_9 {
                    color=blue
                    22 [label="Enter when branch condition "];
                    23 [label="Access qualifier /SomeEnum"];
                    24 [label="Access variable R|/SomeEnum.A1|"];
                    25 [label="Equality operator =="];
                    26 [label="Exit when branch condition"];
                }
                subgraph cluster_10 {
                    color=blue
                    27 [label="Enter when branch condition "];
                    28 [label="Access qualifier /SomeEnum"];
                    29 [label="Access variable R|/SomeEnum.A2|"];
                    30 [label="Equality operator =="];
                    31 [label="Exit when branch condition"];
                }
                32 [label="Enter when branch result"];
                subgraph cluster_11 {
                    color=blue
                    33 [label="Enter block"];
                    34 [label="Function call: R|/B.B|()"];
                    35 [label="Exit block"];
                }
                36 [label="Exit when branch result"];
                37 [label="Enter when branch result"];
                subgraph cluster_12 {
                    color=blue
                    38 [label="Enter block"];
                    39 [label="Function call: R|/B.B|()"];
                    40 [label="Exit block"];
                }
                41 [label="Exit when branch result"];
                42 [label="Exit when"];
            }
            43 [label="Variable declaration: lval b: R|B|"];
            44 [label="Access variable R|<local>/b|"];
            45 [label="Function call: R|/takeB|(...)"];
            46 [label="Exit block"];
        }
        47 [label="Exit function test_1" style="filled" fillcolor=red];
    }
    14 -> {15};
    15 -> {16};
    16 -> {17};
    17 -> {18};
    18 -> {19};
    19 -> {20};
    20 -> {21};
    21 -> {22};
    22 -> {23};
    23 -> {24};
    24 -> {25};
    25 -> {26};
    26 -> {37 27};
    27 -> {28};
    28 -> {29};
    29 -> {30};
    30 -> {31};
    31 -> {32};
    32 -> {33};
    33 -> {34};
    34 -> {35};
    35 -> {36};
    36 -> {42};
    37 -> {38};
    38 -> {39};
    39 -> {40};
    40 -> {41};
    41 -> {42};
    42 -> {43};
    43 -> {44};
    44 -> {45};
    45 -> {46};
    46 -> {47};

    subgraph cluster_13 {
        color=red
        48 [label="Enter function test_2" style="filled" fillcolor=red];
        subgraph cluster_14 {
            color=blue
            49 [label="Enter block"];
            50 [label="Access qualifier /SomeEnum"];
            51 [label="Access variable R|/SomeEnum.A1|"];
            52 [label="Variable declaration: lval flag: R|SomeEnum|"];
            subgraph cluster_15 {
                color=blue
                53 [label="Enter when"];
                54 [label="Access variable R|<local>/flag|"];
                55 [label="Check not null: R|<local>/flag|!!"];
                subgraph cluster_16 {
                    color=blue
                    56 [label="Enter when branch condition "];
                    57 [label="Access qualifier /SomeEnum"];
                    58 [label="Access variable R|/SomeEnum.A1|"];
                    59 [label="Equality operator =="];
                    60 [label="Exit when branch condition"];
                }
                subgraph cluster_17 {
                    color=blue
                    61 [label="Enter when branch condition "];
                    62 [label="Access qualifier /SomeEnum"];
                    63 [label="Access variable R|/SomeEnum.A2|"];
                    64 [label="Equality operator =="];
                    65 [label="Exit when branch condition"];
                }
                66 [label="Enter when branch result"];
                subgraph cluster_18 {
                    color=blue
                    67 [label="Enter block"];
                    68 [label="Function call: R|/B.B|()"];
                    69 [label="Exit block"];
                }
                70 [label="Exit when branch result"];
                71 [label="Enter when branch result"];
                subgraph cluster_19 {
                    color=blue
                    72 [label="Enter block"];
                    73 [label="Function call: R|/B.B|()"];
                    74 [label="Exit block"];
                }
                75 [label="Exit when branch result"];
                76 [label="Exit when"];
            }
            77 [label="Variable declaration: lval b: R|B|"];
            78 [label="Access variable R|<local>/b|"];
            79 [label="Function call: R|/takeB|(...)"];
            80 [label="Exit block"];
        }
        81 [label="Exit function test_2" style="filled" fillcolor=red];
    }
    48 -> {49};
    49 -> {50};
    50 -> {51};
    51 -> {52};
    52 -> {53};
    53 -> {54};
    54 -> {55};
    55 -> {56};
    56 -> {57};
    57 -> {58};
    58 -> {59};
    59 -> {60};
    60 -> {71 61};
    61 -> {62};
    62 -> {63};
    63 -> {64};
    64 -> {65};
    65 -> {66};
    66 -> {67};
    67 -> {68};
    68 -> {69};
    69 -> {70};
    70 -> {76};
    71 -> {72};
    72 -> {73};
    73 -> {74};
    74 -> {75};
    75 -> {76};
    76 -> {77};
    77 -> {78};
    78 -> {79};
    79 -> {80};
    80 -> {81};

    subgraph cluster_20 {
        color=red
        82 [label="Enter function test_3" style="filled" fillcolor=red];
        subgraph cluster_21 {
            color=blue
            83 [label="Enter block"];
            84 [label="Access qualifier /SomeEnum"];
            85 [label="Access variable R|/SomeEnum.A1|"];
            86 [label="Variable declaration: lval flag: R|SomeEnum|"];
            subgraph cluster_22 {
                color=blue
                87 [label="Enter when"];
                88 [label="Access variable R|<local>/flag|"];
                subgraph cluster_23 {
                    color=blue
                    89 [label="Enter when branch condition "];
                    90 [label="Access qualifier /SomeEnum"];
                    91 [label="Access variable R|/SomeEnum.A1|"];
                    92 [label="Equality operator =="];
                    93 [label="Exit when branch condition"];
                }
                subgraph cluster_24 {
                    color=blue
                    94 [label="Enter when branch condition "];
                    95 [label="Access qualifier /SomeEnum"];
                    96 [label="Access variable R|/SomeEnum.A2|"];
                    97 [label="Equality operator =="];
                    98 [label="Exit when branch condition"];
                }
                99 [label="Enter when branch result"];
                subgraph cluster_25 {
                    color=blue
                    100 [label="Enter block"];
                    101 [label="Function call: R|/B.B|()"];
                    102 [label="Exit block"];
                }
                103 [label="Exit when branch result"];
                104 [label="Enter when branch result"];
                subgraph cluster_26 {
                    color=blue
                    105 [label="Enter block"];
                    106 [label="Function call: R|/B.B|()"];
                    107 [label="Exit block"];
                }
                108 [label="Exit when branch result"];
                109 [label="Exit when"];
            }
            110 [label="Variable declaration: lval b: R|B|"];
            111 [label="Access variable R|<local>/b|"];
            112 [label="Function call: R|/takeB|(...)"];
            113 [label="Exit block"];
        }
        114 [label="Exit function test_3" style="filled" fillcolor=red];
    }
    82 -> {83};
    83 -> {84};
    84 -> {85};
    85 -> {86};
    86 -> {87};
    87 -> {88};
    88 -> {89};
    89 -> {90};
    90 -> {91};
    91 -> {92};
    92 -> {93};
    93 -> {104 94};
    94 -> {95};
    95 -> {96};
    96 -> {97};
    97 -> {98};
    98 -> {99};
    99 -> {100};
    100 -> {101};
    101 -> {102};
    102 -> {103};
    103 -> {109};
    104 -> {105};
    105 -> {106};
    106 -> {107};
    107 -> {108};
    108 -> {109};
    109 -> {110};
    110 -> {111};
    111 -> {112};
    112 -> {113};
    113 -> {114};

}
